import sys
N, M = map(int, sys.stdin.readline().split())

location = [list(map(int,sys.stdin.readline().strip())) for _ in range(N)]

visited = [[0]*M for _ in range(N)]

# 좌 우 위 아래
dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

#BFS
queue = [(0,0)]
visited[0][0] = 1 # 원점으로 안돌아오도록

while queue:
    a, b = queue.pop(0)
    if a == N-1 and b == M-1 : # 목표지점에 도달하면 break
        print(visited[a][b])
        break
    for i in range(4):
        x = a + dx[i]
        y = b + dy[i]
        if 0 <= x < N and 0 <= y < M: #리스트 밖으로 나가는지 체크
            if visited[x][y] == 0 and location[x][y] == 1: #방문한 적 없고 갈 수 있는 길인지 체크
                visited[x][y] = visited[a][b] + 1 #횟수 카운트
                queue.append((x,y))
    print(visited, queue)

# 7 7
# 1011111
# 1110001
# 1000001
# 1000001
# 1000001
# 1000001
# 1111111
# [[1, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]] [(1, 0)]
# [[1, 0, 0, 0, 0, 0, 0], [2, 3, 0, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]] [(2, 0), (1, 1)]
# [[1, 0, 0, 0, 0, 0, 0], [2, 3, 0, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]] [(1, 1), (3, 0)]
# [[1, 0, 0, 0, 0, 0, 0], [2, 3, 4, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]] [(3, 0), (1, 2)]
# [[1, 0, 0, 0, 0, 0, 0], [2, 3, 4, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]] [(1, 2), (4, 0)]
# [[1, 0, 5, 0, 0, 0, 0], [2, 3, 4, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]] [(4, 0), (0, 2)]
# [[1, 0, 5, 0, 0, 0, 0], [2, 3, 4, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]] [(0, 2), (5, 0)]
# [[1, 0, 5, 6, 0, 0, 0], [2, 3, 4, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]] [(5, 0), (0, 3)]
# [[1, 0, 5, 6, 0, 0, 0], [2, 3, 4, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [7, 0, 0, 0, 0, 0, 0]] [(0, 3), (6, 0)]
# [[1, 0, 5, 6, 7, 0, 0], [2, 3, 4, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [7, 0, 0, 0, 0, 0, 0]] [(6, 0), (0, 4)]
# [[1, 0, 5, 6, 7, 0, 0], [2, 3, 4, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [7, 8, 0, 0, 0, 0, 0]] [(0, 4), (6, 1)]
# [[1, 0, 5, 6, 7, 8, 0], [2, 3, 4, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [7, 8, 0, 0, 0, 0, 0]] [(6, 1), (0, 5)]
# [[1, 0, 5, 6, 7, 8, 0], [2, 3, 4, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [7, 8, 9, 0, 0, 0, 0]] [(0, 5), (6, 2)]
# [[1, 0, 5, 6, 7, 8, 9], [2, 3, 4, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [7, 8, 9, 0, 0, 0, 0]] [(6, 2), (0, 6)]
# [[1, 0, 5, 6, 7, 8, 9], [2, 3, 4, 0, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [7, 8, 9, 10, 0, 0, 0]] [(0, 6), (6, 3)]
# [[1, 0, 5, 6, 7, 8, 9], [2, 3, 4, 0, 0, 0, 10], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [7, 8, 9, 10, 0, 0, 0]] [(6, 3), (1, 6)]
# [[1, 0, 5, 6, 7, 8, 9], [2, 3, 4, 0, 0, 0, 10], [3, 0, 0, 0, 0, 0, 0], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [7, 8, 9, 10, 11, 0, 0]] [(1, 6), (6, 4)]
# [[1, 0, 5, 6, 7, 8, 9], [2, 3, 4, 0, 0, 0, 10], [3, 0, 0, 0, 0, 0, 11], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [7, 8, 9, 10, 11, 0, 0]] [(6, 4), (2, 6)]
# [[1, 0, 5, 6, 7, 8, 9], [2, 3, 4, 0, 0, 0, 10], [3, 0, 0, 0, 0, 0, 11], [4, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [7, 8, 9, 10, 11, 12, 0]] [(2, 6), (6, 5)]
# [[1, 0, 5, 6, 7, 8, 9], [2, 3, 4, 0, 0, 0, 10], [3, 0, 0, 0, 0, 0, 11], [4, 0, 0, 0, 0, 0, 12], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [7, 8, 9, 10, 11, 12, 0]] [(6, 5), (3, 6)]
# [[1, 0, 5, 6, 7, 8, 9], [2, 3, 4, 0, 0, 0, 10], [3, 0, 0, 0, 0, 0, 11], [4, 0, 0, 0, 0, 0, 12], [5, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0], [7, 8, 9, 10, 11, 12, 13]] [(3, 6), (6, 6)]
# [[1, 0, 5, 6, 7, 8, 9], [2, 3, 4, 0, 0, 0, 10], [3, 0, 0, 0, 0, 0, 11], [4, 0, 0, 0, 0, 0, 12], [5, 0, 0, 0, 0, 0, 13], [6, 0, 0, 0, 0, 0, 0], [7, 8, 9, 10, 11, 12, 13]] [(6, 6), (4, 6)]
# 13